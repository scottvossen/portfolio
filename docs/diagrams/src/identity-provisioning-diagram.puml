@startuml identity-provisioning-diagram
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

' Import azure components
'     - https://dev.azure.com/azurecom/ACOM/_wiki/wikis/ACOM.wiki/4061/PlantUML-Diagrams
'     - https://github.com/RicardoNiepel/C4-PlantUML
'     - https://github.com/plantuml-stdlib/Azure-PlantUML
'     - https://github.com/plantuml-stdlib/Azure-PlantUML/blob/master/AzureSymbols.md#azure-symbols
!define AzurePuml https://raw.githubusercontent.com/plantuml-stdlib/Azure-PlantUML/master/dist
!includeurl AzurePuml/AzureCommon.puml
' optional flag for simplified view (must be after common)
' !includeurl AzurePuml/AzureSimplified.puml
!includeurl AzurePuml/AzureC4Integration.puml

!includeurl AzurePuml/AIMachineLearning/all.puml
!includeurl AzurePuml/Analytics/all.puml
!includeurl AzurePuml/Compute/all.puml
!includeurl AzurePuml/Containers/all.puml
!includeurl AzurePuml/Databases/all.puml
!includeurl AzurePuml/DevOps/all.puml
!includeurl AzurePuml/General/all.puml
!includeurl AzurePuml/Identity/all.puml
!includeurl AzurePuml/Integration/all.puml
!includeurl AzurePuml/Management/all.puml
!includeurl AzurePuml/Media/all.puml
!includeurl AzurePuml/Mobile/all.puml
!includeurl AzurePuml/Networking/all.puml
!includeurl AzurePuml/Security/all.puml
!includeurl AzurePuml/Storage/all.puml
!includeurl AzurePuml/Web/all.puml

' Import sprites for components
'     - https://github.com/tupadr3/plantuml-icon-font-sprites#icon-sets
!define ICONURL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master
!includeurl ICONURL/common.puml

!includeurl ICONURL/font-awesome/user_circle.puml

' ===========================

' layout
' LAYOUT_TOP_DOWN()
LAYOUT_LANDSCAPE()
hide stereotype

title Identity Provisioning Diagram

System(corPlatformApp, "cor-platform", "AAD App") {
  Container(corPlatformEntPrincipal, "Enterprise App", "Service Principal", "The tenant specific app instance assigns roles to other principals, users, and user groups.", $sprite="user_circle")
  Container(svcRoles, "Service Roles", "App Role", "{serviceId}.Read.All, {serviceId}.ReadWrite.All, {serviceId}.Delete.All")
}

System(corPlatformAdminApp, "cor-platform-admin", "AAD App") {
  Container(corPlatformAdminAppEntPrincipal, "Enterprise App", "Service Principal", "The tenant specific app instance that is assigned role(s).", $sprite="user_circle")
  Container(corPlatformAdminCreds, "Credentials", "Secret", "Admin credentials for platform management, development, and testing.", $sprite="key")
}

System(scs, "SCS", "Resource Group") {
  AzureWebApp(svcWebApp, "App Service", "App Service", "")
  AzureManagedIdentity(svcIdentity, "App Service Identity", "Managed Identity", "A system-assigned managed identity for the app service.")

  Rel(svcIdentity, svcWebApp, "Assigned", "NO SECRET MGMT")
}

System(apiReleasePipeline, "API Release Pipeline", "ADO Pipeline Template") {
  Container(preReleaseStep, "Pre-release", "npo-cli Task", "npo-cli provision app-roles --skip-delete-operations")
  Container(postReleaseStep, "Post-release", "npo-cli Task", "npo-cli provision app-roles")
}

Rel(apiReleasePipeline, corPlatformAdminCreds, "Authenticate Using")
Rel(apiReleasePipeline, svcRoles, "Manage App Roles")
Rel(apiReleasePipeline, svcIdentity, "Assign App Roles")

Rel(corPlatformAdminAppEntPrincipal, corPlatformApp, "Is Owner")
Rel(corPlatformAdminAppEntPrincipal, corPlatformEntPrincipal, "Is Owner")

Rel_L(svcWebApp, apiReleasePipeline, "Triggers")

Lay_U(corPlatformAdminApp, corPlatformApp)
Lay_U(scs, apiReleasePipeline)

' custom styling
' ==============
!$COLOR_BG = "#efeeed"
!$COLOR_FONT = "#000000"

UpdateElementStyle("System", $bgColor=$COLOR_BG, $fontColor=$COLOR_FONT)

@enduml
